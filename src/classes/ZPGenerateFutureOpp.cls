public class ZPGenerateFutureOpp{

  @future
  public static void createMensualOpportunity(String oppid) {
    
    
     Opportunity opp = [SELECT AccountId,Amount,Aprobada__c,Canal_de_venta__c, zj_arg_tipo_de_venta__c, cantidad_de_cuotas__c,
                        Cantidad_Facturas__c,CloseDate,Comentario_en_factura__c,Condiciones_de_Pago__c,CreatedById,CurrencyIsoCode,
                        Description,Descuento_aplicado__c,Descuento__c, zp_tipo_de_pago__c, Estado_Aprobacion__c,Estado_Envio__c,Fecha_Aprobacion__c,
                        fecha_de_facturacion_solicitada__c,Fecha_Venta_Enviada_Portal__c,Fecha_Venta_Recibida__c,
                        ForecastCategory,ForecastCategoryName,from_api__c,Id,IDU_Cuenta_Oportunidad__c,
                        idu_facturador__c,ID_Propuesta__c,importe_bruto__c,importe_final__c,Importe_Total__c,IsClosed,IsDeleted,IsWon,
                        LastModifiedDate,LastReferencedDate,Medio_de_Pago__c,monto_cargo_financiero__c,Motivos_de_no_venta__c,
                        Motivo_Descuento__c,Motivo_Perdida__c,Name,Numero_Factura__c,Observaciones_en_Factura__c,Orden_de_Compra__c,
                        Org_Vta__c,Origin_sale_id__c,OwnerId,parent_id__c,Pricebook2Id,Probability,Producto__c,self_service__c,StageName,
                        Stand_Silver__c,Suma_Facturacion__c,Tipo_Facturacion__c,total_acuerdo__c,Total_Facturado__c,Type,Venta_Enviada_Portal__c,
                        Venta_Recibida__c FROM Opportunity where Id=:oppid];
                
                //obtengo prodcutos de la oportunidad original
                  
                List<OpportunityLineItem> olis = [SELECT Id, Discount, Description, Quantity, cantidad__c, IDU_Cuenta_Servicio__c,  IDU_Servicio__c, fecha_inicio_servicio__c, UnitPrice,
                                              Fecha_fin_de_servicio__c, PricebookEntryId, Tipo_Facturacion__c, Autorrenovable__c, Avisos__c, Destaques__c, Destaques_Premium__c,
                                              Emprendimientos__c, Precio_Aviso__c, Precio_Destaque__c, Precio_Destaque_Premium__c, Precio_Emprendimiento__c
                                              from OpportunityLineItem where OpportunityId=:oppid];
                
                //obtengo lineas de facturacion de la oportunidad original
                                 
                List<Facturacion__c> facturas = [SELECT Id, CurrencyIsoCode, Condicion_de_Pago__c, Fecha_de_factura__c, ID_Propuesta__c, IDU_Cuenta_Factura__c, IDU_Facturador__c,
                                            ID_Venta_Portal__c, Importe_facturado__c, Leyenda_en_factura__c, Oportunidad__c, Porcentaje__c from Facturacion__c where Oportunidad__c=:oppid];
                                     
                // clono tantas oportunidades como facturas a futuro necesite generar 
                for(Integer i = 2; i <= Integer.ValueOf(opp.Cantidad_Facturas__c); i++){
                    Opportunity oppclon = opp.clone(false,false);
                    oppclon.Numero_Factura__c=i;
                    oppclon.Aprobada__c = false;
                    oppclon.StageName = 'Cerrada ganada (100%)';
                    oppclon.total_acuerdo__c = 0;
                    oppclon.zp_tipo_de_pago__c = opp.zp_tipo_de_pago__c;
                    oppclon.autogenerated__c = true;
                    oppclon.zj_arg_tipo_de_venta__c= 'Renovación - Gestión de meses anteriores';
                    oppclon.Estado_Aprobacion__c = 'No enviada';
                    oppclon.parent_id__c = Integer.ValueOf(opp.ID_Propuesta__c);
                    oppclon.closeDate = opp.closeDate.addDays(30*(i-1));
                    oppclon.Fecha_Aprobacion__c = opp.Fecha_Aprobacion__c.addDays(30*(i-1));
                    
                    System.debug(LoggingLevel.INFO, 'oppclon:' + oppclon);
                    
                    System.debug(LoggingLevel.INFO, 'oppclon:' + oppclon.StageName );
                    System.debug(LoggingLevel.INFO, 'oppclon:' + oppclon.zp_tipo_de_pago__c );
                    System.debug(LoggingLevel.INFO, 'oppclon:' + oppclon.Org_Vta__c);
                    System.debug(LoggingLevel.INFO, 'oppclon:' + oppclon.Suma_Facturacion__c);
                    
                    insert oppclon;
                     // clono los productos de la oportunidad de OP del primer mes y replico en la de las demas facturas
                     List<OpportunityLineItem> listolis = new List<OpportunityLineItem>();
                     
                     for (OpportunityLineItem oli : olis){
                         
                         OpportunityLineItem oliclon = oli.clone(false,false);
                         oliclon.fecha_inicio_servicio__c = oli.fecha_inicio_servicio__c.addDays(30*(i-1));
                         oliclon.PricebookEntryId = oli.PricebookEntryId;
                         oliclon.Tipo_Facturacion__c = oli.Tipo_Facturacion__c;
                         oliclon.Autorrenovable__c = oli.Autorrenovable__c;
                         oliclon.duracion_dias__c = '30';
                         oliclon.Avisos__c = oli.Avisos__c;
                         oliclon.Destaques__c = oli.Destaques__c;
                         oliclon.Destaques_Premium__c = oli.Destaques_Premium__c;
                         oliclon.Emprendimientos__c = oli.Emprendimientos__c;
                         oliclon.Precio_Aviso__c = oli.Precio_Aviso__c;
                         oliclon.Precio_Destaque__c = oli.Precio_Destaque__c;
                         oliclon.Precio_Destaque_Premium__c = oli.Precio_Destaque_Premium__c;
                         oliclon.Precio_Emprendimiento__c = oli.Precio_Emprendimiento__c;
                         oliclon.Quantity = 1;
                         oliclon.cantidad__c = 1;
                         oliclon.OpportunityId = oppclon.Id; 
                        
                         listolis.add(oliclon);     
                    }
                    // inserto productos de la oportunidad clonados y modificados
                    insert listolis;
                    
                    
                    List<Facturacion__c> listfacturas = new List<Facturacion__c>();
                     
                     for (Facturacion__c fact : facturas ){
                         
                         Facturacion__c factclon = fact.clone(false,false);
                         factclon.Fecha_de_factura__c= fact.Fecha_de_factura__c.addDays(30*(i-1));
                         factclon.Oportunidad__c = oppclon.Id;
                         
                         listfacturas.add(factclon);   
                    }
                    // inserto lineas de facturacion de la oportunidad clonadas y modificadas                    
                    insert listfacturas;
                 
                 
                  //Envio a Aprobar la Oportunidad Generada (el clon)
                  
                  Approval.ProcessSubmitRequest req = new Approval.ProcessSubmitRequest();
                  req.setComments('Envio para Aprobacion de Oportunidad Autogenerada con facturacion Mensual');
                  req.setObjectId(oppclon.id);
                  Approval.ProcessResult result = Approval.process(req);
                  
                    
                }
  }
}