trigger OppSendSale on Opportunity (after insert, after update) {
    if(!System.isFuture()){
        for (Opportunity opp : Trigger.new)
        {
            Account a = [SELECT Negocio__c, Country__c, status_cuenta_corriente__c, Owner.Email, Owner.FirstName, Owner.LastName, Owner.Tipo_de_Usuario__c, Name, ID_Usuario__c, ID_Empresa__c, Razon_Social__c, Nro_Id_Tributaria__c  from Account where Id=:opp.AccountId];
            String listProduct;
            String listCustomerProducts;
            String listFacturas;

            if(opp.Probability==100){    
                 OpportunityLineItem[] olis = [SELECT Id, PricebookEntry.Product2.Name, IDU_Servicio__c, Opportunity.Org_Vta__c, TotalPrice, ListPrice, Discount, Cantidad__c, fecha_inicio_servicio__c, Duracion__c, Quantity, PricebookEntry.Product2.Precio_editable__c, Tipo_Facturacion__c from OpportunityLineItem where OpportunityId =:opp.Id];
                    
                 if(olis.size() > 0){              
                     for (OpportunityLineItem oli : olis){
                             
                             for (OpportunityLineItem oli2 : olis){
                                 if(opp.Org_Vta__c!='ARG-ZJ' && oli.PricebookEntry.Product2.Precio_editable__c == false && oli2.PricebookEntry.Product2.Precio_editable__c == false && oli2.Discount!=oli.Discount){
                                    opp.addError('No es posible asignar diferentes descuentos sobre la misma oportunidad');
                                 }
                             }
                             if(a.Negocio__c=='ZP' && (opp.Org_Vta__c =='MEX-ZP' || opp.Org_Vta__c =='COL-ZP' || opp.Org_Vta__c =='ARG-ZP') && opp.from_api__c==false && opp.Tipo_Facturacion__c != oli.Tipo_Facturacion__c){
                                 opp.addError('El Tipo de Facturacion de todos los productos debe ser el elegido en la Oportunidad'); 
                             }
                             if(a.Negocio__c=='ZP' && opp.autogenerated__c==false && opp.Tipo_Facturacion__c=='Periodica' && Integer.valueOf(opp.Cantidad_Facturas__c) != oli.Cantidad__c){
                                    opp.addError('La cantidad del acuerdo del producto debe coincidir con la cantidad de Facturas de la Oportunidad');
                             }
                             if(opp.Org_Vta__c=='ARG-ZJ'){
                                    listProduct += '<tr><td>'+oli.PricebookEntry.Product2.Name+'</td><td>'+oli.IDU_Servicio__c+'</td><td>'+oli.Quantity+'</td><td>'+oli.ListPrice+'</td><td>'+oli.Discount+'</td><td>'+oli.TotalPrice+'</td><td>'+oli.fecha_inicio_servicio__c+'</td><td>'+oli.Duracion__c+'</td></tr>';   
                                    listCustomerProducts += '<tr><td>'+oli.PricebookEntry.Product2.Name+'</td><td>'+oli.Quantity+'</td><td>'+oli.fecha_inicio_servicio__c+'</td><td>'+oli.Duracion__c+'</td></tr>';     
                             }
                     }
                 }    
                 
                 if(a.status_cuenta_corriente__c != 'Habilitada' && opp.UpFront__c != true ){
                     opp.addError('Solo es posible cerrar oportunidades de Cuentas con Status Cuenta Corriente Habilitada');
                 }
                 
                 Account[] accounts = [Select status_cuenta_corriente__c from Account where Id IN (Select IDU_Facturador__c from Facturacion__c where Oportunidad__c=:opp.Id)];
                 if(accounts.size() > 0){              
                     for (Account account : accounts){
                         if(account.status_cuenta_corriente__c != 'Habilitada' && opp.UpFront__c != true){
                             opp.addError('Solo es posible Facturar a Cuentas con Status Cuenta Corriente Habilitada');
                         }
                     }
                 }
                 
                 
                 if(opp.Org_Vta__c =='ARG-ZJ' && opp.Aprobada__c==true){
                 
                    if(Trigger.oldMap.get(opp.Id).Aprobada__c==false){
                    
                        Facturacion__c[] fact = [Select IDU_Facturador__c, IDU_Cuenta_Factura__c, Orden_de_Compra__c, Condicion_de_Pago__c, Importe_facturado__c, Porcentaje__c, Leyenda_en_factura__c, E_mail_de_recepcion_de_factura__c from Facturacion__c where Oportunidad__c =: opp.Id];
                        Contact c = [Select FirstName, LastName, Email from Contact where Id=: opp.Contacto__c];
                        for (Facturacion__c f : fact){
                            listFacturas += '<tr><td>'+f.IDU_Cuenta_Factura__c+'</td><td>'+f.Porcentaje__c+'</td><td>'+f.Importe_facturado__c+'</td><td>'+f.Orden_de_Compra__c+'</td><td>'+f.Condicion_de_Pago__c+'</td><td>'+f.E_mail_de_recepcion_de_factura__c+'</td><td>'+f.Leyenda_en_factura__c+'</td></tr>';
                        } 
                        String checkUF;
                        String checkYC;
                        if(opp.UpFront__c==true){ 
                            checkUF='checked';
                        }
                        if(opp.YA_CARGADO__c==true){
                            checkYC='checked';
                        }
                        
                        User[] u=[Select Email from User where UserRole.Name='ARG-ZJ Asistente de Ventas']; 
                         
                        List<String> listMails= new List<String>();
    
                        for(User user : u ){
                            listMails.add(user.Email);
                            System.debug(LoggingLevel.INFO, 'ZJ ARG Send Email TO: ' + user.Email);
                        }
                       
                        Messaging.reserveSingleEmailCapacity(2);
                        Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
                        
                        System.debug(LoggingLevel.INFO, 'listMails: ' + listMails);
                       
                        mail.setToAddresses(listMails);
                        //mail.setCcAddresses(ccAddresses);
                        mail.setReplyTo(a.Owner.Email);
                        mail.setSenderDisplayName('Salesforce Notification');
                        mail.setSubject('SF ZJ - Oportunidad '+opp.ID_Propuesta__c+' Aprobada');
                        mail.setBccSender(false);
                        mail.setUseSignature(false);
                        // Specify the text content of the email.
                        mail.setPlainTextBody('Salesforce Notification');
                        mail.setHtmlBody('<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><body style="font-family: sans-serif;"><h2>Zonajobs - Oportunidad '+opp.ID_Propuesta__c+' Aprobada</h2><div><div><div style="font-weight:bold;float: left;width:18%;"><p>Ejecutivo</p><p>Cuenta</p><p>Nombre Propuesta</p><p>N° Propuesta</p><p>ID Usuario</p><p>ID Empresa</p><p>Contacto</p><p>Descripcion</p></div><div style="float: left;width:35%;"><p>'+a.Owner.FirstName+' '+a.Owner.LastName+'</p><p>'+a.Name+'</p><p>'+opp.Name+'</p><p>'+opp.ID_Propuesta__c+'</p><p>'+a.ID_Usuario__c+'</p><p>'+a.ID_Empresa__c+'</p><p>'+c.FirstName+' '+c.LastName+'</p><p>'+opp.Description+'</p></div><div style="float: left;width:15%;"><p>Fecha de Cierre</p><p>Importe Final</p><p>Motivo Descuento</p><p>Ya Cargado</p><p>UpFront</p></div><div style="float: left;width:15%;"><p>'+opp.CloseDate+'</p><p>'+opp.importe_final__c+'</p><p>'+opp.Motivo_Descuento__c+'</p><p><input type="checkbox" '+checkYC+'/></p><p><input type="checkbox" '+checkUF+'/></p></div></div><div style="background:#FF652B;font-weight:bold;height:20px;padding-top:12px;clear:both;color:#FFFFFF;margin-top:20px;padding-left:10px;">Detalle Productos</div><table><tr><th style="width:20%;text-align:left;">Nombre</th><th style="width:10%;text-align:left;">ID Usuario</th><th style="width:5%;text-align:left;">Cantidad</th><th style="width:5%;text-align:left;">Precio Lista</th><th style="width:5%;text-align:left;">Descuento</th><th style="width:5%;text-align:left;">Precio Final</th><th style="width:10%;text-align:left;">Fecha de Inicio</th><th style="width:5%;text-align:left;">Duración</th></tr>'+listProduct+'</table><div style="background:#FF652B;height:20px;padding-top:12px;clear:both;color:#FFFFFF;font-weight:bold;padding-left:10px;">Detalle Facturación</div><table><tr><th style="width:5%;text-align:left;">IDU Facturador</th><th style="width:5%;text-align:left;">Porcentaje</th><th style="width:5%;text-align:left;">Importe</th><th style="width:8%;text-align:left;">Orden de Compra</th><th style="width:10%;text-align:left;">Condicion de Pago</th><th style="width:10%;text-align:left;">E-mail Factura</th><th style="width:20%;text-align:left;">Leyenda</th></tr>'+listFacturas+'</table></div><p style="padding-top:30px;">Para abrir la Oportunidad en Salesforce haga click aqui: <a href="http://na8.salesforce.com/'+opp.Id+'">http://na8.salesforce.com/'+opp.Id+'</a></p></body>');
                        
                        // Send the email you have created.
                        Messaging.sendEmail(new Messaging.SingleEmailMessage[] { mail });
                        
                        if(a.Owner.Tipo_de_Usuario__c=='Telefonico' && opp.YA_CARGADO__c==false){
                            // Send email to customer
                            Opportunity o = [Select Owner.Email from Opportunity where Id=:opp.Id];
                            
                            List<String> listMailsCustomer = new List<String>();  
                            listMailsCustomer.add(c.Email);
                            listMailsCustomer.add(o.Owner.Email);
                            
                            
                            
                            System.debug(LoggingLevel.INFO, 'Email' + opp.Owner.Email);                  
                            
                            
                            Messaging.SingleEmailMessage mail2 = new Messaging.SingleEmailMessage();                   
        
                            mail2.setToAddresses(listMailsCustomer);
                            //mail.setCcAddresses(new String[] {a.Owner.Email});
                            mail2.setReplyTo(o.Owner.Email);
                            mail2.setSenderDisplayName('Confirmación de Servicios Zonajobs');
                            mail2.setSubject('Zonajobs - Activación de Servicios');
                            mail2.setBccSender(false);
                            mail2.setUseSignature(false);
                            // Specify the text content of the email.
                            mail2.setPlainTextBody('Salesforce Notification');
                            mail2.setHtmlBody('<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><body style="font-family: sans-serif; color:#767676;width:925px;"><div style="height:61px;background:#F58426;"><img src="https://c.na8.content.force.com/servlet/servlet.ImageServer?id=015C000000225pe&oid=00D80000000KZuv&lastMod=1422020681000" /></div><div style="margin-top:40px;"><div><div style="font-weight:bold;float: left;width:15%;"><p>Número Cliente</p><p>Razón Social</p><p>CUIT</p><p>Contacto</p><p>Email Contacto</p></div><div style="float: left;width:30%;"><p>'+a.ID_Usuario__c+'</p><p>'+a.Razon_Social__c+'</p><p>'+a.Nro_Id_Tributaria__c+'</p><p>'+c.FirstName+' '+c.LastName+'</p><p>'+c.Email+'</p></div><div style="float: left;width:18%;font-weight:bold;"><p>Ejecutivo Asignado</p><p>Email</p></div><div style="float: left;width:37%;"><p>'+a.Owner.FirstName+' '+a.Owner.LastName+'</p><p>'+a.Owner.Email+'</p></div></div><div style="background:#F58426;font-weight:bold;height:20px;padding-top:12px;clear:both;color:#FFFFFF;margin-top:20px;padding-left:10px;">DETALLE PRODUCTOS</div><table><tr><th style="width:20%;text-align:left;">Nombre</th><th style="width:5%;text-align:left;">Cantidad</th><th style="width:10%;text-align:left;">Fecha de Inicio</th><th style="width:5%;text-align:left;">Duración</th></tr>'+listCustomerProducts+'</table><div style="font-weight:bold;float:left;width:11%;margin-top:40px;"></div><div style="float: left;width:59%;"><p></p></div><div style="float: left;width:15%;margin-top:50px;border-top: 3px solid #767676;font-weight:bold;"><p>Total sin IVA</p></div><div style="float: left;width:15%;margin-top:50px;border-top: 3px solid #767676;"><p>$'+opp.importe_final__c+'</p></div></div><div style="padding-top:40px; clear:both; font-size:12px;padding-bottom:20px;"><p><b>Facturación:</b>  Los valores expresados al lado, no incluyen impuestos. Dridco SA (en adelante “Dridco”) facturará el servicio contratado con los datos informados en el alta de la cuenta en el sitio web. En cualquier momento, Dridco podrá solicitar datos adicionales al cliente a los fines referidos.</p></div><div style="background:#D8D8D8;font-size: 14px;font-weight: bold;padding-bottom: 5px; padding-left: 10px;padding-top: 5px;">CONDICIONES GENERALES</div><div style="font-size:12px;padding-top:10px;"><p><b style="text-decoration:underline;">Medios de Pago:</b> Transferencia: Cuenta Corriente en Pesos 042-016099/7 CBU 07200427-20000001609972 del Banco Santander Río, a nombre de DRIDCO SA (*1); Cheque a nombre de DRIDCO SA, NO a la orden, con fecha al día (no diferido) a entregarse en Dr. Profesor Pedro Chutro 3135, Oficina 102, CP: 1437, CABA, de lunes a viernes de 10 a 17 hs. (*2)(*3). (*1) Recuerde enviar el comprobante de la transferencia a pagosyfacturas@zonajobs.com.ar o por FAX al (011) 4114 0601 indicando nro de factura, CUIT y Razón Social. (*2) NO se aceptan cheques de terceros. (*3) DRIDCO S.A. es Agente de Recaudación. Se encuentra incorporado a la Res. 963/2011 (AGIP) mediante la Res. 1033/2011 (AGIP), ANEXO I. NO CORRESPONDE HACER A DRIDCO S.A PERCEPCIONES NI RETENCIONES DE IIBB POR CAPITAL FEDERAL. Pagos con tarjeta de crédito: Los pagos con tarjeta de crédito, deberán realizarse únicamente a través del sitio web y de manera anticipada. En caso de elegir este medio de pago, el cliente deberá solicitarlo directamente al Ejecutivo de Cuentas antes de realizar la contratación. En caso de tener que realizar gestiones sobre facturas vencidas deberá comunicarse con cobranzas al 4114-0679 opción 2.<br><br><b style="text-decoration:underline;">Productos:</b> El tiempo de utilización de los servicios de avisos y de la búsqueda en base de datos será de 30 días corridos desde la solicitud. En caso de contratar packs de avisos el plazo de utilización variará de acuerdo a la cantidad de avisos contratados y será establecido al momento de la contratación o será establecido en la promoción vigente, si hubiere. El plazo de utilización de otros productos distintos a búsqueda en base o avisos se establecerá al momento de la contratación. La vigencia de la publicación de los avisos en el sitio web es de 30 días corridos, sin excepción y el plazo de administración de los CV de los candidatos es de 60 días desde la fecha de la publicación. En caso de que el aviso pase a estado cerrado luego del plazo informado o a solicitud del cliente, no podrán ni el cliente ni Zonajobs visualizar o administrar los datos de los postulantes. El cambio de estado de los avisos a cerrado, deberá ser realizado por el cliente sin excepción. El plazo de utilización de otros productos que no sean avisos o búsqueda en base, será establecido exclusivamente al momento de la contratación. La disponibilidad de los productos estará vigente en el portal en los plazos establecidos. La no utilización de los productos en el plazo establecido de 30 dias, o el acordado a la hora de contratación, no da derecho al cliente a solicitar reembolsos o notas de crédito y o extensión del plazo de utilización de los servicios. En caso de querer realizar nuevas publicación o solicitar la contratación de cualquier servicio deberá comunicarse al 41140679 opción 1.<br><br><b style="text-decoration:underline;">Atención al cliente:</b> Para realizar reclamos o en caso de que el servicio contratado no fuera el solicitado por el cliente o en caso de dudas sobre el funcionamiento o alcances del mismo, deberá comunicarse a nuestro servicio de atención al cliente al 4114-0679. Términos y condiciones https://www.zonajobs.com.ar/p/#!404.</p></div></body>');
                            
                            // Send the email you have created.
                            Messaging.sendEmail(new Messaging.SingleEmailMessage[] { mail2 });
                        }
                     }
                 
                
                }
            }         
            
            if(opp.Probability==100 && opp.Aprobada__c==true && a.Negocio__c=='DM' && opp.from_api__c==false && opp.Estado_Envio__c=='Pendiente Envio'){  
               System.debug(LoggingLevel.INFO, 'Entra trigger OppSendSale');  
               
               // Valido que la fecha de inicio de los productos no sea menor que la fecha de envio (activacion del producto) 
               List<OpportunityLineItem> sales = [SELECT fecha_inicio_servicio__c, PricebookEntry.Product2.Family 
                                                        FROM OpportunityLineItem where OpportunityId=:opp.Id]; 
                                                        
               for(OpportunityLineItem oli: sales) {
                   
                   if(oli.PricebookEntry.Product2.Family == 'Pack Publicaciones' || oli.PricebookEntry.Product2.Family == 'Pack Listados'){
                       if(oli.fecha_inicio_servicio__c < System.today()){
                           oli.fecha_inicio_servicio__c = System.today();
                           update oli;
                       }
                   }     
                }
               
               // Envio contratacion
               DMContratacionCallOut.sendContratacion(opp.Id);
            }
            
        }
    }
}
